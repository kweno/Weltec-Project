// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// SelectItemFromDropdown - Use 'SelectItemFromDropdownParams' to pass parameters into this method.
        /// </summary>
        public void SelectItemFromDropdown()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIReleaseWindow.UIItemWindow.UIClientApplicationexeListItem.UINameEdit;
            WinComboBox uIServer_ComboBoxComboBox = this.UIDatabaseEvaluatorWindow.UIServer_ComboBoxWindow.UIServer_ComboBoxComboBox;
            #endregion

            // Double-Click 'Name' text box
            Mouse.DoubleClick(uINameEdit, new Point(105, 11));

            System.Threading.Thread.Sleep(60000);

            // Select 'DESKTOP-FVFO8GL\SQL2016N' in 'Server_ComboBox' combo box
            uIServer_ComboBoxComboBox.SelectedItem = this.SelectItemFromDropdownParams.UIServer_ComboBoxComboBoxSelectedItem;
        }
        
        /// <summary>
        /// AssertDropdownValue - Use 'AssertDropdownValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertDropdownValue()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIDatabaseEvaluatorWindow.UIItemWindow.UIItemEdit;
            #endregion

            // Verify that the 'Text' property of text box equals 'DESKTOP-FVFO8GL\SQL2016N'
            Assert.AreEqual(this.AssertDropdownValueExpectedValues.UIItemEditText, uIItemEdit.Text);
        }
        
        #region Properties
        public virtual SelectItemFromDropdownParams SelectItemFromDropdownParams
        {
            get
            {
                if ((this.mSelectItemFromDropdownParams == null))
                {
                    this.mSelectItemFromDropdownParams = new SelectItemFromDropdownParams();
                }
                return this.mSelectItemFromDropdownParams;
            }
        }
        
        public virtual AssertDropdownValueExpectedValues AssertDropdownValueExpectedValues
        {
            get
            {
                if ((this.mAssertDropdownValueExpectedValues == null))
                {
                    this.mAssertDropdownValueExpectedValues = new AssertDropdownValueExpectedValues();
                }
                return this.mAssertDropdownValueExpectedValues;
            }
        }
        
        public UIReleaseWindow UIReleaseWindow
        {
            get
            {
                if ((this.mUIReleaseWindow == null))
                {
                    this.mUIReleaseWindow = new UIReleaseWindow();
                }
                return this.mUIReleaseWindow;
            }
        }
        
        public UIDatabaseEvaluatorWindow UIDatabaseEvaluatorWindow
        {
            get
            {
                if ((this.mUIDatabaseEvaluatorWindow == null))
                {
                    this.mUIDatabaseEvaluatorWindow = new UIDatabaseEvaluatorWindow();
                }
                return this.mUIDatabaseEvaluatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private SelectItemFromDropdownParams mSelectItemFromDropdownParams;
        
        private AssertDropdownValueExpectedValues mAssertDropdownValueExpectedValues;
        
        private UIReleaseWindow mUIReleaseWindow;
        
        private UIDatabaseEvaluatorWindow mUIDatabaseEvaluatorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectItemFromDropdown'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class SelectItemFromDropdownParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'DESKTOP-FVFO8GL\SQL2016N' in 'Server_ComboBox' combo box
        /// </summary>
        public string UIServer_ComboBoxComboBoxSelectedItem = "DESKTOP-FVFO8GL\\SQL2016N";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertDropdownValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class AssertDropdownValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of text box equals 'DESKTOP-FVFO8GL\SQL2016N'
        /// </summary>
        public string UIItemEditText = "DESKTOP-FVFO8GL\\SQL2016N";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIReleaseWindow : WinWindow
    {
        
        public UIReleaseWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Release";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Release");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Release");
            #endregion
        }
        
        #region Properties
        public UIClientApplicationexeListItem UIClientApplicationexeListItem
        {
            get
            {
                if ((this.mUIClientApplicationexeListItem == null))
                {
                    this.mUIClientApplicationexeListItem = new UIClientApplicationexeListItem(this);
                }
                return this.mUIClientApplicationexeListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIClientApplicationexeListItem mUIClientApplicationexeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIClientApplicationexeListItem : WinListItem
    {
        
        public UIClientApplicationexeListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinListItem.PropertyNames.Name] = "ClientApplication.exe";
            this.WindowTitles.Add("Release");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Release");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDatabaseEvaluatorWindow : WinWindow
    {
        
        public UIDatabaseEvaluatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Database Evaluator";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Database Evaluator");
            #endregion
        }
        
        #region Properties
        public UIServer_ComboBoxWindow UIServer_ComboBoxWindow
        {
            get
            {
                if ((this.mUIServer_ComboBoxWindow == null))
                {
                    this.mUIServer_ComboBoxWindow = new UIServer_ComboBoxWindow(this);
                }
                return this.mUIServer_ComboBoxWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIServer_ComboBoxWindow mUIServer_ComboBoxWindow;
        
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIServer_ComboBoxWindow : WinWindow
    {
        
        public UIServer_ComboBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Server_ComboBox";
            this.WindowTitles.Add("Database Evaluator");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIServer_ComboBoxComboBox
        {
            get
            {
                if ((this.mUIServer_ComboBoxComboBox == null))
                {
                    this.mUIServer_ComboBoxComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIServer_ComboBoxComboBox.WindowTitles.Add("Database Evaluator");
                    #endregion
                }
                return this.mUIServer_ComboBoxComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIServer_ComboBoxComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1001";
            this.WindowTitles.Add("Database Evaluator");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Database Evaluator");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
}
