USE [MASTER];

IF EXISTS(SELECT * FROM dbo.[#Values]) DROP TABLE dbo.[#Values]

CREATE TABLE [dbo].[#Values]
( [ProcessInfo] VARCHAR(50) NULL,
 [Text] VARCHAR(MAX) NULL) ;

INSERT INTO [#Values] ([ProcessInfo], [Text]) VALUES ('HostName',HOST_NAME())

INSERT INTO [#Values] ([ProcessInfo], [Text]) VALUES ('InstanceName',CONVERT(VARCHAR(MAX),SERVERPROPERTY('InstanceName')))

INSERT INTO [#Values] ([ProcessInfo], [Text]) VALUES ('ProductLevel',CONVERT(VARCHAR(MAX),SERVERPROPERTY('ProductLevel')))

INSERT INTO [#Values] ([ProcessInfo], [Text]) VALUES ('ProductVersion',CONVERT(VARCHAR(MAX),SERVERPROPERTY('ProductVersion')))

INSERT INTO [#Values] ([ProcessInfo], [Text]) 

    SELECT 'SQLVersion', SUBSTRING(@@VERSION, 1, CHARINDEX('-', @@VERSION) - 1)
        + CONVERT(VARCHAR(100), SERVERPROPERTY('edition'))
    AS 'Server Version';

-- Max DOP

CREATE TABLE #MaxDOP (NAME VARCHAR(255), minimum INT, maximum INT, config_value INT, run_value INT)

EXEC [master].[dbo].[sp_configure] 'show advanced options', 1;
RECONFIGURE;

INSERT INTO #MaxDOP
EXEC [master].[dbo].[sp_configure] 'max degree of parallelism'

EXEC [master].[dbo].[sp_configure] 'show advanced options', 0;
RECONFIGURE;

INSERT INTO [#Values] ([ProcessInfo], [Text]) SELECT 'Max Degree Of Parallelism',run_value FROM #MaxDOP WHERE name='max degree of parallelism'

DROP TABLE #MaxDOP

-- Memory

INSERT INTO [#Values] ([ProcessInfo], [Text])
SELECT [description], CONVERT(VARCHAR(50),value_in_use) FROM sys.configurations
WHERE name like '%server memory%'


SELECT * FROM [#Values]
